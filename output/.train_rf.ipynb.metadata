{"timestamp": 1687183603.031036, "stored_source_code": "upstream = None\nproduct = None\nimport json\nimport pickle\nimport warnings\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\nimport xgboost as xgb\nfrom sklearn.ensemble import RandomForestClassifier\n\nwarnings.filterwarnings('ignore')\ncols = ['is_beverage', 'non_recyclable_and_non_biodegradable_materials_count', \n        'est_co2_agriculture', 'est_co2_consumption', \n        'est_co2_distribution', 'est_co2_packaging', 'est_co2_processing', \n        'est_co2_transportation']\ntarget_col = 'ecoscore_grade'\nprint(cols)\n# train = pd.read_csv(upstream['Preprocess features']['train_csv'])\ntrain = pd.read_csv(upstream['Preprocess features']['train_csv'], usecols=cols + [target_col])\ntest = pd.read_csv(upstream['Preprocess features']['test_csv'], usecols=cols)\nX_train, y_train = train[cols], train[target_col]\nX_test = test[cols]\nfor i in cols:\n    X_train[i] = X_train[i].astype(float)\n    X_test[i] = X_test[i].astype(float)\nprint(X_train.shape, y_train.shape)\nprint(X_test.shape)\nmodel = RandomForestClassifier(n_estimators=500, random_state=0)\nmodel.fit(X_train, y_train)\nPath(product['result']).write_text(json.dumps({'target': {index: int(i) for index, i in enumerate(model.predict(X_test))}}))", "params": {}}